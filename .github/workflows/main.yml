name: rails test and deploy to heroku
on: 
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  HEROKU_USERNAME: "_"
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  HEROKU_APP_NAME: ${{ 'directeye-product-register' }}

jobs:
  product-registry:
    name: product-registry
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: start containers
        run: docker-compose -f "docker-compose.yml" up --build -d

      - name: rails test
        run: | 
          docker-compose exec -T --env 'RAILS_ENV=test' web rails db:create
          docker-compose exec -T --env 'RAILS_ENV=test' web rails db:migrate
          docker-compose exec -T --env 'RAILS_ENV=test' web rails test

      - name: stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down

      - name: Build and deploy product-register app on heroku
        run: |
          docker login -u "HEROKU_USERNAME" -p "HEROKU_API_KEY" registry.heroku.com
          # heroku container:push web --app ${HEROKU_APP_NAME}
          docker build --no-cache -t registry.heroku.com/${HEROKU_APP_NAME}/web -f Dockerfile .
          docker push registry.heroku.com/${HEROKU_APP_NAME}/web
          # heroku container:release web --app ${HEROKU_APP_NAME}
          heroku run rails db:migrate --app ${HEROKU_APP_NAME}
          # heroku run bundle exec rake db:migrate RAILS_ENV=production --app ${HEROKU_APP_NAME}
